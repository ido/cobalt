/*Autogenerated from python*/
// Copyright 2017 UChicago Argonne, LLC. All rights reserved.
// Licensed under a modified BSD 3-clause license. See LICENSE for details.
%{
#include <bgsched/allocator/LiveModel.h>
%}
%include "/bgsys/drivers/ppcfloor/hlcs/include/bgsched/allocator/LiveModel.h"

%extend bgsched::allocator::LiveModel{

    int getBlockStatusValue(const std::string& blockName){
        return $self->getBlockStatus(blockName).toValue();
    }

    std::string getBlockStatusString( const std::string& blockName ){
        
        bgsched::Block::Status v = ($self->getBlockStatus(blockName)).toValue();
        switch(v){
            PYBGSCHED_CASE_ENUM_TO_STRING(bgsched::Block, Allocated)
            PYBGSCHED_CASE_ENUM_TO_STRING(bgsched::Block, Booting)
            PYBGSCHED_CASE_ENUM_TO_STRING(bgsched::Block, Free)
            PYBGSCHED_CASE_ENUM_TO_STRING(bgsched::Block, Initialized)
            PYBGSCHED_CASE_ENUM_TO_STRING(bgsched::Block, Terminating)
            default:
                return std::string("UnknownState");
        }       
        return std::string("UnknownState");
    }
}

%pythoncode %{
LiveModel.getBlockStatus = LiveModel.getBlockStatusValue
%}
