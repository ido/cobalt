#!/usr/bin/make -f 
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.
# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1
client_wrapper_dir = /usr/libexec/cobalt
python_wrapper_dir = $(client_wrapper_dir)/bin
python_site_packages = /usr/local/lib/python2.7/site-packages

configure: configure-stamp

configure-stamp:
	dh_testdir
	# Add here commands to configure the package.
	touch configure-stamp

build: build-stamp

build-stamp: configure-stamp  
	dh_testdir
	# Add here commands to compile the package.
	#$(MAKE)
	#docbook-to-man debian/testpack.sgml > testpack.1
	python setup.py build
	# Install wrapper.c
	make -C src/clients PROGPREFIX=$(client_wrapper_dir)
	touch $@

clean: 
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	# Add here commands to clean up after the build process.
	#$(MAKE) clean
	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs
	# Add here commands to install the package into debian/testpack.
	#$(MAKE) DESTDIR=$(CURDIR)/debian/testpack install
	# Build architecture-independent files here.
	mkdir -p debian/tmp/usr/sbin
	mkdir -p debian/tmp/usr/bin
	mkdir -p debian/tmp/$(python_wrapper_dir)
	mkdir -p debian/tmp/$(python_site_packages)
	python setup.py install --prefix=debian/tmp/$(client_wrapper_dir)  --install-lib debian/tmp/$(python_site_packages)
	mv debian/tmp/usr/bin/slp.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/bgsched.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/user_script_forker.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/system_script_forker.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/gravina.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/cqm.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/brooklyn.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/partadm.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/setres.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/releaseres.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/cqadm.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/schedctl.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/cluster_system.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/cluster_simulator.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/nodeadm.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/prologue_helper.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/cdbwriter.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/perfdata.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/bb.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/bbsim.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/hammer.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/radm.py debian/tmp/usr/sbin
	mv debian/tmp/usr/bin/cweb.py debian/tmp/usr/sbin
	rm -f debian/tmp/usr/bin/*test*
	rm -f debian/tmp/usr/bin/brun.py
	rm -f debian/tmp/usr/bin/bstat.py
	rm -f debian/tmp/usr/bin/pmrun.py
	rm -f debian/tmp/usr/bin/cdump.py
	mkdir -p debian/tmp/etc/
	install -m 644 misc/cobalt.bb.conf debian/tmp/etc/cobalt.conf
	mkdir -p debian/tmp/var/log/cobalt/
	mkdir -p debian/tmp/var/spool/cobalt/
	touch debian/tmp/etc/cobalt.utility
	install -m 755 src/clients/wrapper debian/tmp/usr/bin
	for file in `find debian/tmp/usr/bin -name \*.py | sed -e 's/\.py//' |grep -v fake | grep -v cobalt-launcher` ; do echo $${file} ; ln -sf wrapper $${file} ;done 

binary-indep: build install
	# We have nothing to do by default.
	# Build architecture-dependent files here.

binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_installexamples
	#       dh_install
	#       dh_installmenu
	#       dh_installdebconf       
	#       dh_installlogrotate
	#       dh_installemacsen
	#       dh_installpam
	#       dh_installmime
	#       dh_python
	dh_installinit
	#       dh_installcron
	#       dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	#       dh_perl
	#       dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
